{"version":3,"sources":["App.tsx","index.tsx"],"names":["SortType","goodsFromServer","App","state","isReversed","sortType","NONE","this","listOfItems","goods","visibleGoods","sort","itemA","itemB","ALPHABET","localeCompare","LENGTH","length","console","log","reverse","getReorderedGoods","unSorted","className","type","classNames","onClick","setState","map","item","React","Component","ReactDOM","render","document","getElementById"],"mappings":"iKAkBKA,E,wGAbQC,EAAkB,CAC7B,YACA,SACA,OACA,YACA,QACA,QACA,OACA,QACA,MACA,W,SAGGD,O,eAAAA,I,uBAAAA,I,oBAAAA,M,KA4CE,IAAME,EAAb,4MACEC,MAAQ,CACNC,YAAY,EACZC,SAAUL,EAASM,MAHvB,4CAME,WAAU,IAAD,OACP,EAAiCC,KAAKJ,MAA9BC,EAAR,EAAQA,WAAYC,EAApB,EAAoBA,SACdG,EAxCH,SACLC,EADK,GAGJ,IADCJ,EACF,EADEA,SAAUD,EACZ,EADYA,WAGNM,EAAY,YAAOD,GAmBzB,OAjBAC,EAAaC,MAAK,SAACC,EAAOC,GACxB,OAAQR,GACN,KAAKL,EAASc,SACZ,OAAOF,EAAMG,cAAcF,GAC7B,KAAKb,EAASgB,OACZ,OAAOJ,EAAMK,OAASJ,EAAMI,OAC9B,QACE,OAAO,MAKbC,QAAQC,IAAId,EAAUD,GACjBA,GACHM,EAAaU,UAGRV,EAgBeW,CAAkBpB,EAAiBM,KAAKJ,OACtDmB,GAAYlB,GACbC,IAAaL,EAASM,KAE3B,OACE,mCACE,sBAAKiB,UAAU,kBAAf,UACE,sBAAKA,UAAU,UAAf,UACE,wBACEC,KAAK,SACLD,UAAWE,IAAW,iBAAkB,CACtC,WAAYpB,IAAaL,EAASc,WAEpCY,QAAS,WACP,EAAKC,SAAS,CAAEtB,SAAUL,EAASc,YANvC,iCAYA,wBACEU,KAAK,SACLD,UAAWE,IAAW,oBAAqB,CACzC,WAAYpB,IAAaL,EAASgB,SAEpCU,QAAS,WACP,EAAKC,SAAS,CAAEtB,SAAUL,EAASgB,UANvC,4BAYA,wBACEQ,KAAK,SACLD,UAAWE,IAAW,oBAAqB,CACzC,YAA2B,IAAfrB,IAEdsB,QAAS,WACP,EAAKC,SAAS,CAAEvB,YAAaA,KANjC,sBAYEkB,GACA,wBACEE,KAAK,SACLD,UAAU,4BACVG,QAAS,WACP,EAAKC,SAAS,CACZvB,YAAY,EACZC,SAAUL,EAASM,QANzB,sBAeJ,6BACGE,EAAYoB,KAAI,SAAAC,GACf,OAAO,oBAAe,UAAQ,OAAvB,SAA+BA,GAAtBA,iBAtE9B,GAAyBC,IAAMC,WC3D/BC,IAASC,OACP,cAAC,EAAD,IACAC,SAASC,eAAe,W","file":"static/js/main.1aff6abd.chunk.js","sourcesContent":["import React from 'react';\nimport 'bulma/css/bulma.css';\nimport './App.scss';\nimport classNames from 'classnames';\n\nexport const goodsFromServer = [\n  'Dumplings',\n  'Carrot',\n  'Eggs',\n  'Ice cream',\n  'Apple',\n  'Bread',\n  'Fish',\n  'Honey',\n  'Jam',\n  'Garlic',\n];\n\nenum SortType {\n  NONE,\n  ALPHABET,\n  LENGTH,\n}\n\ntype ReorderOptions = {\n  sortType: SortType,\n  isReversed: boolean,\n};\n\n// Use this function in the render method to prepare goods\nexport function getReorderedGoods(\n  goods: string[],\n  { sortType, isReversed }: ReorderOptions,\n) {\n  // To avoid the original array mutation\n  const visibleGoods = [...goods];\n\n  visibleGoods.sort((itemA, itemB) => {\n    switch (sortType) {\n      case SortType.ALPHABET:\n        return itemA.localeCompare(itemB);\n      case SortType.LENGTH:\n        return itemA.length - itemB.length;\n      default:\n        return 0;\n    }\n  });\n  // Sort and reverse goods if needed\n  // eslint-disable-next-line no-console\n  console.log(sortType, isReversed);\n  if (!isReversed) {\n    visibleGoods.reverse();\n  }\n\n  return visibleGoods;\n}\n\ntype State = {\n  isReversed: boolean,\n  sortType: SortType,\n};\n\nexport class App extends React.Component<{}, State> {\n  state = {\n    isReversed: false,\n    sortType: SortType.NONE,\n  };\n\n  render() {\n    const { isReversed, sortType } = this.state;\n    const listOfItems = getReorderedGoods(goodsFromServer, this.state);\n    const unSorted = !isReversed\n      && sortType === SortType.NONE;\n\n    return (\n      <>\n        <div className=\"section content\">\n          <div className=\"buttons\">\n            <button\n              type=\"button\"\n              className={classNames('button is-info', {\n                'is-light': sortType !== SortType.ALPHABET,\n              })}\n              onClick={() => {\n                this.setState({ sortType: SortType.ALPHABET });\n              }}\n            >\n              Sort alphabetically\n            </button>\n\n            <button\n              type=\"button\"\n              className={classNames('button is-success', {\n                'is-light': sortType !== SortType.LENGTH,\n              })}\n              onClick={() => {\n                this.setState({ sortType: SortType.LENGTH });\n              }}\n            >\n              Sort by length\n            </button>\n\n            <button\n              type=\"button\"\n              className={classNames('button is-warning', {\n                'is-light': isReversed === false,\n              })}\n              onClick={() => {\n                this.setState({ isReversed: !isReversed });\n              }}\n            >\n              Reverse\n            </button>\n\n            {!unSorted && (\n              <button\n                type=\"button\"\n                className=\"button is-danger is-light\"\n                onClick={() => {\n                  this.setState({\n                    isReversed: false,\n                    sortType: SortType.NONE,\n                  });\n                }}\n              >\n                Reset\n              </button>\n            )}\n          </div>\n\n          <ul>\n            {listOfItems.map(item => {\n              return <li key={item} data-cy=\"Good\">{item}</li>;\n            })}\n          </ul>\n        </div>\n      </>\n    );\n  }\n}\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}